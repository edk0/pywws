
pywws.Process
*************


Introduction
============

This module takes raw weather station data (typically sampled every
five or ten minutes) and generates hourly, daily and monthly summary
data, which is useful when creating tables and graphs. The hourly data
is derived from all the records in one hour, e.g. from 18:00:00 to
18:59:59, and is given the index of the last record in that hour.

The daily data summarises the weather over a 24 hour period typically
ending at 2100 or 0900 hours, local (non DST) time, though midnight is
another popular convention. It is indexed by the end of the 24 hour
period. Daytime and nightime, as used when computing maximum and
minimum temperatures, are assumed to start at 0900 and 2100 local
time, or 1000 and 2200 when DST is in effect, regardless of the
meteorological day.

To adjust the meteorological day to your preference, or that used by
your local official weather station, edit the "day end hour" line in
your "weather.ini" file, then run Reprocess.py to regenerate the
summaries.

Monthly summary data is computed from the daily summary data. If the
meteorological day does not end at midnight, then each month may begin
and end up to 12 hours before or after midnight.

Pressure is converted from absolute to relative, using an offset taken
from the weather station, so make sure you set this up correctly
before processing data. It also computes the pressure trend - how it
has varied over the previous three hours.

Wind speed data is averaged over the hour (or day) and the maximum
gust speed during the hour (or day) is recorded. The predominant wind
direction is also calculated.

Rainfall is converted from the raw "total since last reset" figure to
a more useful total in the last hour, day or month.


Detailed API
============

Generate hourly, daily & monthly summaries of raw weather station
data.

usage: python Process.py [options] data_dir options are:

   --help

   display this help

data_dir is the root directory of the weather data

-[ Functions ]-

+------------+--------------------------------------------------------------------------------------------+
| ``Process` | Generate summaries from raw weather station data.                                          |
| `(params,  |                                                                                            |
| raw_data,  |                                                                                            |
| calib_data |                                                                                            |
| , ...)     |                                                                                            |
+------------+--------------------------------------------------------------------------------------------+
| ``calibrat |                                                                                            |
| e_data``(l |                                                                                            |
| ogger,     |                                                                                            |
| params,    |                                                                                            |
| raw_data,  |                                                                                            |
| ...)       |                                                                                            |
+------------+--------------------------------------------------------------------------------------------+
| ``main``([ |                                                                                            |
| argv])     |                                                                                            |
+------------+--------------------------------------------------------------------------------------------+

-[ Classes ]-

+------------+--------------------------------------------------------------------------------------------+
| ``Acc``(ti | 'Accumulate' raw weather data to produce summaries.                                        |
| me_offset, |                                                                                            |
| last_rain) |                                                                                            |
+------------+--------------------------------------------------------------------------------------------+
| ``Average` |                                                                                            |
| `()        |                                                                                            |
+------------+--------------------------------------------------------------------------------------------+
| ``Maximum` |                                                                                            |
| `()        |                                                                                            |
+------------+--------------------------------------------------------------------------------------------+
| ``Minimum` |                                                                                            |
| `()        |                                                                                            |
+------------+--------------------------------------------------------------------------------------------+
| ``MonthAcc | Derive monthly summary data from daily data.                                               |
| ``(start)  |                                                                                            |
+------------+--------------------------------------------------------------------------------------------+

pywws.Process.calibrate_data(logger, params, raw_data, calib_data)

class class pywws.Process.Average

   add(value)

   result()

class class pywws.Process.Minimum

   add(value, time)

   result()

class class pywws.Process.Maximum

   add(value, time)

   result()

class class pywws.Process.Acc(time_offset, last_rain)

   'Accumulate' raw weather data to produce summaries.

   Compute average wind speed, log daytime max & nighttime min
   temperatures and maximum wind gust, find dominant wind direction
   and compute total rainfall.

   Daytime is assumed to be 0900-2100 and nighttime to be 2100-0900,
   local time (1000-2200 and 2200-1000 during DST), regardless of the
   "day end hour" setting.

   add(raw)

      Add a raw data reading.

   reset_hourly()

   get_hourly()

      Get the hourly result of the data accumulation.

   reset_daily()

   get_daily()

class class pywws.Process.MonthAcc(start)

   Derive monthly summary data from daily data.

   add(daily)

   get_monthly()

pywws.Process.Process(params, raw_data, calib_data, hourly_data, daily_data, monthly_data)

   Generate summaries from raw weather station data.

   Starts from the last hourly or daily summary (whichever is earlier)
   and continues to end of the raw data.

   The meteorological day end (typically 2100 or 0900 local time) is
   set in the preferences file "weather.ini". The default value is
   2100 (2200 during DST), following the historical convention for
   weather station readings.

   Atmospheric pressure is converted from absolute to relative, using
   the weather station's offset as recorded by LogData.py. The
   pressure trend (change over three hours) is also computed.

pywws.Process.main(argv=None)
